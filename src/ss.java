import javax.swing.*;
import java.awt.*;
import java.io.*;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Random;

/**
 * @Description
 * @Author 王传鑫
 * @Date 2019/1/14
 */
public class ss extends JFrame{

    /**
     * Creates new form MainUI
     */
    public ss() {
        initData();


        initComponents();


    }

    private static List<String> names=new ArrayList<>();
    private static List<String> runnableNames=new ArrayList<>();
    private static List<String> selectedNames=new ArrayList<>();
    private static int  status=0;// 0 就绪 1 开始 2暂停 3终止
    class ImagePanel extends JPanel {
        Dimension d;
        Image image;

        public ImagePanel(Dimension d, Image image) {
            super();
            this.d = d;
            this.image = image;
        }

        @Override
        public void paintComponent(Graphics g) {
            super.paintComponent(g);
            g.drawImage(image, 0, 0, d.width, d.height, this);
            ss.this.repaint();
        }
    }
    private void initData(){
        Toolkit kit = Toolkit.getDefaultToolkit(); // 定义工具包
        Dimension screenSize = kit.getScreenSize(); // 获取屏幕的尺寸
        int screenWidth = screenSize.width/2; // 获取屏幕的宽
        int screenHeight = screenSize.height/2; // 获取屏幕的高
        int height = this.getHeight();
        int width = this.getWidth();
        setLocation((screenWidth-width)/2, (screenHeight-height)/2);
        names.clear();
        selectedNames.clear();
        try {

            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());

        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException e) { e.printStackTrace();

        }
        ImageIcon imageIcon=new ImageIcon(this.getClass().getResource("/bg.jpg"));
        JLabel lbBg = new JLabel(imageIcon);
        lbBg.setBounds(0, 0, this.getWidth(), this.getHeight());
        getContentPane().add(lbBg);
        Image img = Toolkit.getDefaultToolkit ().getImage (this.getClass().getResource("/logo.png"));
        setTitle("幸运抽奖星");
        ImagePanel imagePanel = new ImagePanel(screenSize, imageIcon.getImage());
        setContentPane(imagePanel);
        setIconImage(img);
        selectedRunnable=new SelectingRunnable();
//        selectedRunnable.setDaemon(true);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        startBtn = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        finishBtn = new javax.swing.JButton();
        pauseBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        totleText = new javax.swing.JTextField();
        selectedNum = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        importMenu = new javax.swing.JMenuItem();
        exportMenu = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        startBtn.setIcon(new javax.swing.ImageIcon(this.getClass().getResource("/begin.png"))); // NOI18N
        startBtn.setText("开始");
        startBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startBtnActionPerformed(evt);
            }
        });

        jTextField1.setFont(new java.awt.Font("宋体", 1, 80)); // NOI18N
        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField1.setText("获奖人员");
        jTextField1.setToolTipText("");


        finishBtn.setIcon(new javax.swing.ImageIcon(this.getClass().getResource("/stop.png"))); // NOI18N
        finishBtn.setText("结束");
        finishBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finishBtnActionPerformed(evt);
            }
        });

        pauseBtn.setIcon(new javax.swing.ImageIcon(this.getClass().getResource("/pause.png"))); // NOI18N
        pauseBtn.setText("暂停");
        pauseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pauseBtnActionPerformed(evt);
            }
        });

        jLabel1.setText("总人数");

        totleText.setEditable(false);
        totleText.setText("0");

        selectedNum.setEditable(false);
        selectedNum.setText("0");

        jLabel2.setText("获奖人数");

        jMenu1.setText("File");

        importMenu.setText("导入数据");
        importMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importMenuActionPerformed(evt);
            }
        });
        jMenu1.add(importMenu);

        exportMenu.setText("导出数据");
        exportMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportMenuActionPerformed(evt);
            }
        });
        jMenu1.add(exportMenu);

        jMenuBar1.add(jMenu1);

//        jMenu2.setText("Edit");
//        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 615, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(startBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(finishBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE))
                                        .addComponent(pauseBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(19, 19, 19))
                        .addGroup(layout.createSequentialGroup()
                                .addGap(55, 55, 55)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(totleText, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(selectedNum, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel1)
                                        .addComponent(totleText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(jLabel2)
                                                .addComponent(selectedNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(68, 68, 68)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(startBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(pauseBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(60, 60, 60)
                                                .addComponent(finishBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(59, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>


    private void pauseBtnActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        if(status==1){
            status=2;
            try {
                Thread.sleep(30);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
            String name=jTextField1.getText().trim();
            runnableNames.remove(name);
            selectedNames.add(name);
            System.out.println("selected "+name);

            selectedNum.setText(selectedNames.size()+"");
            pauseBtn.setText("继续");
        }else{
            synchronized (runnableHandler){
            status=1;
            runnableHandler.notify();
            pauseBtn.setText("暂停");
            }
        }
    }

    private void startBtnActionPerformed(java.awt.event.ActionEvent evt) {

        if(status==0||status==3){
            runnableNames.clear();
            selectedNames.clear();
            names.stream().forEach(n->runnableNames.add(n));
            selectedNum.setText("0");

            status=1;
            selectedThread=new Thread(selectedRunnable);
            selectedThread.start();
            startBtn.setEnabled(false);
            pauseBtn.setEnabled(true);
            finishBtn.setEnabled(true);
        }

    }
    class SelectingRunnable implements Runnable{
        Random random=new Random(71);
        @Override
        public void run() {
            while (status!=3){
                if(runnableNames.size()==1){
                    break;
                }
                int index= random.nextInt(runnableNames.size());
                String name=runnableNames.get(index);
                System.out.println(name);
                jTextField1.setText(name);
                synchronized (runnableHandler) {
                    while (status == 2) {
                        try {
                            runnableHandler.wait();
                        } catch (InterruptedException e) {
                            break;
                        }
                    }
                }
                try {
                    Thread.sleep(20);
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }
            }
            System.out.println("finish thread");

        }
    }

    private void finishBtnActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        if(!selectedThread.isInterrupted()){
            selectedThread.interrupt();
            selectedThread=null;
            startBtn.setEnabled(true);
            jTextField1.setText("");
            status=3;
        }else{
            JOptionPane.showMessageDialog(null, " 抽奖活动已停止", " 提示", JOptionPane.PLAIN_MESSAGE);
        }
//        pauseBtn.setEnabled(false);
//        finishBtn.setEnabled(false);
    }

    private void importMenuActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:

        JFileChooser fileChooser=new JFileChooser();
        fileChooser.setFileSelectionMode(0);

        fileChooser.showDialog(null,"请选择文件");
        File file=fileChooser.getSelectedFile();
        if(file==null){
            return;
        }
        BufferedReader reader=null;
        try {
             reader=new BufferedReader(new InputStreamReader(new FileInputStream(file),"GBK"));
            String text=null;
            while (null!=(text=reader.readLine())){
                names.add(text.trim().replaceAll("\n",""));
            }
        } catch (FileNotFoundException e) {
            e.printStackTrace();
        }catch (IOException e) {
            e.printStackTrace();
        }finally {
            if(reader!=null){
                try {
                    reader.close();
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            totleText.setText(names.size()+"");
            startBtn.setEnabled(true);
            JOptionPane.showMessageDialog(null, " 导入成功", " 导入名单", JOptionPane.PLAIN_MESSAGE);
        }
    }

    private void exportMenuActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        JFileChooser fileChooser=new JFileChooser();
        fileChooser.setFileSelectionMode(1);

        fileChooser.showDialog(null,"请选择文件");
        File file=fileChooser.getSelectedFile();
        if(file==null){
            return;
        }
        if(selectedNames.size()!=0){

            BufferedWriter writer=null;
            LocalDateTime dateTime=LocalDateTime.now();
            DateTimeFormatter format = DateTimeFormatter.ofPattern("yyyyMMddHHmmss");
            String suffer=dateTime.format(format);
            File exportData= new File(file.getPath()+String.format("\\获奖名单%s.txt",suffer));
            if(exportData.exists()){
                exportData.deleteOnExit();
            }
            try {
                writer=new BufferedWriter(new OutputStreamWriter(new FileOutputStream(exportData),"GBK"));
               for(String name:selectedNames){
                   writer.write(name);
                   writer.newLine();
               }
            } catch (UnsupportedEncodingException e) {
                e.printStackTrace();
            } catch (FileNotFoundException e) {
                e.printStackTrace();
            }catch (IOException e) {
                e.printStackTrace();
            }finally {
                if(writer!=null){
                    try {
                        writer.close();
                    } catch (IOException e) {
                        e.printStackTrace();
                    }
                }
                JOptionPane.showMessageDialog(null, " 导出完成", " 提示", JOptionPane.PLAIN_MESSAGE);
            }
        }else{
            JOptionPane.showMessageDialog(null, " 还没有中奖名单", " 提示", JOptionPane.PLAIN_MESSAGE);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ss.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ss.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ss.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ss.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ss().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify
    private javax.swing.JMenuItem exportMenu;
    private javax.swing.JButton finishBtn;
    private javax.swing.JMenuItem importMenu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton pauseBtn;
    private javax.swing.JTextField selectedNum;
    private javax.swing.JButton startBtn;
    private javax.swing.JTextField totleText;
    private Thread selectedThread;
    private Runnable selectedRunnable;
    private Object runnableHandler=new Object();
    // End of variables declaration
}
